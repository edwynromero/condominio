<?php

/**
 * This is the model base class for the table "view_full_info_payed_by_location".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewFullInfoPayedByLocation".
 *
 * Columns in table "view_full_info_payed_by_location" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $pay_id
 * @property string $value_pay
 * @property string $is_cash
 * @property string $pay_date
 * @property string $checked
 * @property integer $person_id
 * @property string $full_name
 * @property string $first_name
 * @property string $last_name
 * @property string $identity_code
 * @property string $identity_type
 *
 */
abstract class BaseViewFullInfoPayedByLocation extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_full_info_payed_by_location';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewFullInfoPayedByLocation|ViewFullInfoPayedByLocations', $n);
	}

	public static function representingColumn() {
		return 'value_pay';
	}

	public function rules() {
		return array(
			array('pay_id, person_id', 'numerical', 'integerOnly'=>true),
			array('value_pay', 'length', 'max'=>10),
			array('is_cash', 'length', 'max'=>20),
			array('checked', 'length', 'max'=>4),
			array('full_name', 'length', 'max'=>120),
			array('first_name, last_name', 'length', 'max'=>60),
			array('identity_code', 'length', 'max'=>16),
			array('identity_type', 'length', 'max'=>1),
			array('pay_date', 'safe'),
			array('pay_id, value_pay, is_cash, pay_date, checked, person_id, full_name, first_name, last_name, identity_code, identity_type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('pay_id, value_pay, is_cash, pay_date, checked, person_id, full_name, first_name, last_name, identity_code, identity_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'pay_id' => Yii::t('app', 'Pay'),
			'value_pay' => Yii::t('app', 'Value Pay'),
			'is_cash' => Yii::t('app', 'Is Cash'),
			'pay_date' => Yii::t('app', 'Pay Date'),
			'checked' => Yii::t('app', 'Checked'),
			'person_id' => Yii::t('app', 'Person'),
			'full_name' => Yii::t('app', 'Full Name'),
			'first_name' => Yii::t('app', 'First Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'identity_code' => Yii::t('app', 'Identity Code'),
			'identity_type' => Yii::t('app', 'Identity Type'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('pay_id', $this->pay_id);
		$criteria->compare('value_pay', $this->value_pay, true);
		$criteria->compare('is_cash', $this->is_cash, true);
		$criteria->compare('pay_date', $this->pay_date, true);
		$criteria->compare('checked', $this->checked, true);
		$criteria->compare('person_id', $this->person_id);
		$criteria->compare('full_name', $this->full_name, true);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('identity_code', $this->identity_code, true);
		$criteria->compare('identity_type', $this->identity_type, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}