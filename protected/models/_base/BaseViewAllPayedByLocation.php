<?php

/**
 * This is the model base class for the table "view_all_payed_by_location".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewAllPayedByLocation".
 *
 * Columns in table "view_all_payed_by_location" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $pay_id
 * @property integer $fee_id
 * @property integer $location_id
 * @property string $value_pay
 * @property string $is_cash
 *
 */
abstract class BaseViewAllPayedByLocation extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_all_payed_by_location';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewAllPayedByLocation|ViewAllPayedByLocations', $n);
	}

	public static function representingColumn() {
		return 'value_pay';
	}

	public function rules() {
		return array(
			array('pay_id, fee_id, location_id', 'numerical', 'integerOnly'=>true),
			array('value_pay', 'length', 'max'=>10),
			array('is_cash', 'length', 'max'=>20),
			array('pay_id, fee_id, location_id, value_pay, is_cash', 'default', 'setOnEmpty' => true, 'value' => null),
			array('pay_id, fee_id, location_id, value_pay, is_cash', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'pay_id' => Yii::t('app', 'Pay'),
			'fee_id' => Yii::t('app', 'Fee'),
			'location_id' => Yii::t('app', 'Location'),
			'value_pay' => Yii::t('app', 'Value Pay'),
			'is_cash' => Yii::t('app', 'Is Cash'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('pay_id', $this->pay_id);
		$criteria->compare('fee_id', $this->fee_id);
		$criteria->compare('location_id', $this->location_id);
		$criteria->compare('value_pay', $this->value_pay, true);
		$criteria->compare('is_cash', $this->is_cash, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}