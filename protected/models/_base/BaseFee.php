<?php

/**
 * This is the model base class for the table "mip_fee".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Fee".
 *
 * Columns in table "mip_fee" available as properties of the model,
 * followed by relations of table "mip_fee" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $summary
 * @property string $begin_date
 * @property string $end_date
 * @property string $value
 * @property integer $fee_type_id
 *
 * @property FeeType $feeType
 * @property FeePay[] $feePays
 */
abstract class BaseFee extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mip_fee';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Fee|Fees', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, summary, begin_date, end_date, value, fee_type_id', 'required'),
			array('fee_type_id', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>60),
			array('summary', 'length', 'max'=>255),
			array('value', 'length', 'max'=>10),
			array('id, name, summary, begin_date, end_date, value, fee_type_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'feeType' => array(self::BELONGS_TO, 'FeeType', 'fee_type_id'),
			'feePays' => array(self::HAS_MANY, 'FeePay', 'fee_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'summary' => Yii::t('app', 'Summary'),
			'begin_date' => Yii::t('app', 'Begin Date'),
			'end_date' => Yii::t('app', 'End Date'),
			'value' => Yii::t('app', 'Value'),
			'fee_type_id' => null,
			'feeType' => null,
			'feePays' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('summary', $this->summary, true);
		$criteria->compare('begin_date', $this->begin_date, true);
		$criteria->compare('end_date', $this->end_date, true);
		$criteria->compare('value', $this->value, true);
		$criteria->compare('fee_type_id', $this->fee_type_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}