<?php

/**
 * This is the model base class for the table "mip_pay_not_cash_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PayNotCashInfo".
 *
 * Columns in table "mip_pay_not_cash_info" available as properties of the model,
 * followed by relations of table "mip_pay_not_cash_info" available as properties of the model.
 *
 * @property integer $id
 * @property integer $pay_id
 * @property string $pay_date
 * @property integer $bank_account_id
 * @property string $number
 * @property string $type
 * @property string $value
 * @property integer $source_bank_id
 * @property integer $checked
 *
 * @property BankAccount $bankAccount
 * @property Bank $sourceBank
 * @property Pay $pay
 */
abstract class BasePayNotCashInfo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mip_pay_not_cash_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PayNotCashInfo|PayNotCashInfos', $n);
	}

	public static function representingColumn() {
		return 'number';
	}

	public function rules() {
		return array(
			array('pay_id, bank_account_id, number, type, value', 'required'),
			array('pay_id, bank_account_id, source_bank_id, checked', 'numerical', 'integerOnly'=>true),
			array('number', 'length', 'max'=>255),
			array('type', 'length', 'max'=>2),
			array('value', 'length', 'max'=>10),
			array('pay_date', 'safe'),
			array('pay_date, source_bank_id, checked', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, pay_id, pay_date, bank_account_id, number, type, value, source_bank_id, checked', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bankAccount' => array(self::BELONGS_TO, 'BankAccount', 'bank_account_id'),
			'sourceBank' => array(self::BELONGS_TO, 'Bank', 'source_bank_id'),
			'pay' => array(self::BELONGS_TO, 'Pay', 'pay_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'pay_id' => null,
			'pay_date' => Yii::t('app', 'Pay Date'),
			'bank_account_id' => null,
			'number' => Yii::t('app', 'Number'),
			'type' => Yii::t('app', 'Type'),
			'value' => Yii::t('app', 'Value'),
			'source_bank_id' => null,
			'checked' => Yii::t('app', 'Checked'),
			'bankAccount' => null,
			'sourceBank' => null,
			'pay' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('pay_id', $this->pay_id);
		$criteria->compare('pay_date', $this->pay_date, true);
		$criteria->compare('bank_account_id', $this->bank_account_id);
		$criteria->compare('number', $this->number, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('value', $this->value, true);
		$criteria->compare('source_bank_id', $this->source_bank_id);
		$criteria->compare('checked', $this->checked);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}